#!/bin/bash
##########################################
# The PBS directives #
##########################################
#PBS -q studenti
#PBS -l nodes=8:ppn=8
#PBS -N matmpi
#PBS -o matmpi.out
#PBS -e matmpi.err
##########################################
# -q coda su cui va eseguito il job #
# -l numero di nodi richiesti #
# -N nome job (stesso del file pbs) #
# -o, -e nome file contenenti lâ€™output #
##########################################
sort -u $PBS_NODEFILE > hostlist
NCPU=`wc -l < hostlist`
echo ' This job is allocated on '${NCPU}' cpu(s)'
echo ' Job is running on node(s): '
cat hostlist
PBS_O_WORKDIR=$PBS_O_HOME/ProgettiModB/ProgettoSUMMA
echo ------------------------------------------------------
echo "Eseguo: /usr/lib64/openmpi/1.4-gcc/bin/mpicc -o $PBS_O_WORKDIR/summa $PBS_O_WORKDIR/summa.c $PBS_O_WORKDIR/c_timer.c -O3 -lpthread -lm"
echo ------------------------------------------------------
/usr/lib64/openmpi/1.4-gcc/bin/mpicc -o $PBS_O_WORKDIR/summa $PBS_O_WORKDIR/summa.c $PBS_O_WORKDIR/c_timer.c -O3 -lpthread -lm

#sostituire $NCPU con il numero di processori che si voglio usare
echo ""

i=0
echo "Esecuzione con 1 processore, A=B=C=500*500 NTROW=1 NTCOL=1"
while [ $i -lt 10 ];
do
	/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np 1 $PBS_O_WORKDIR/summa 500 1 1
	let i+=1
done

i=0
echo "Esecuzione con 1 processore, A=B=C=500*500 NTROW=2 NTCOL=2"
while [ $i -lt 10 ];
do
	/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np 1 $PBS_O_WORKDIR/summa 500 2 2
	let i+=1
done

i=0
echo "Esecuzione con 4 processori, A=B=C=500*500 NTROW=1 NTCOL=1"
while [ $i -lt 10 ];
do
	/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np 4 $PBS_O_WORKDIR/summa 500 1 1
	let i+=1
done

i=0
echo "Esecuzione con 4 processori, A=B=C=500*500 NTROW=2 NTCOL=2"
while [ $i -lt 10 ];
do
	/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np 4 $PBS_O_WORKDIR/summa 500 2 2
	let i+=1
done

i=0
echo "Esecuzione con 1 processore, A=B=C=1000*1000 NTROW=1 NTCOL=1"
while [ $i -lt 10 ];
do
	/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np 1 $PBS_O_WORKDIR/summa 1000 1 1
	let i+=1
done

i=0
echo "Esecuzione con 1 processore, A=B=C=1000*1000 NTROW=2 NTCOL=2"
while [ $i -lt 10 ];
do
	/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np 1 $PBS_O_WORKDIR/summa 1000 2 2
	let i+=1
done

i=0
echo "Esecuzione con 4 processori, A=B=C=1000*1000 NTROW=1 NTCOL=1"
while [ $i -lt 10 ];
do
	/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np 4 $PBS_O_WORKDIR/summa 1000 1 1
	let i+=1
done

i=0
echo "Esecuzione con 4 processori, A=B=C=1000*1000 NTROW=2 NTCOL=2"
while [ $i -lt 10 ];
do
	/usr/lib64/openmpi/1.4-gcc/bin/mpiexec -machinefile $PBS_NODEFILE -np 4 $PBS_O_WORKDIR/summa 1000 2 2
	let i+=1
done
